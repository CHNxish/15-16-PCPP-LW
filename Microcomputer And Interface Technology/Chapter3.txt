指令：人们把要求计算机执行测各种操作按照命令的形式写下来
指令系统：一台计算机所能执行的全部指令
程序：计算机完成一个完整的任务所需要的一系列指令的有序集合

指令 = 操作码 + 操作数

8086/8088指令系统中，指令长度在1～6个字节之间，第一个字节恒为操作码
对于指令而言，可能是双操作数指令，单操作数指令，无操作数指令和隐含操作数指令
对操作数而言，有立即操作数，寄存器操作数，存储器操作数，I/O端口操作数

8086/8088CPU寻址：立即寻址，寄存器寻址，存储器寻址，I/O端口寻址
1）立即寻址：mov al,10H
2）寄存器寻址：mov al,bl

3）存储器寻址：
直接寻址：mov ax,[1234H] 默认ds*16 + 1234H的物理地址的字给ax
如果指定其他的段，要加上段超越前缀es:[1234H]
如果没有[]，那么就变成对立即操作数的立即寻址
可以用伪指令buf来代替[1234H]，且这个时候[]可以省略，也就是mov ax,buf（buf必须不是寄存器名）

寄存器间接寻址：mov ax,[bx] 也就是把地址赋给寄存器，然后与段寄存器配合得到存储器中的值
注意的是如果bx没有[]，就是一个操作数，所以必须加上[]，变成有效地址（偏移地址）

寄存器相对寻址：实际地址 = 段地址 * 16 + 有效地址 = 段地址 * 16 + 寄存器地址 + 操作数
操作数有正负，所以要用补码表示
mov ax,[si + count] ax = bs * 16 + si + count
mov ax,[bp - 1000H] ax = ss * 16 + bp + F000H

基址变址寻址： 基址寄存器bx,bp 变址寄存器si,di 有效地址 = 基址寄存器内容 + 变址寄存器内容
基址变址寻址中用到的两个寄存器必须一个是基址，另一个必须是变址
mov ax,[bx+si] ax = ds * 16 + bx + si
mov ax,[bp+di] ax = ss * 16 + bp + di

相对基址变址寻址：有效地址 = 基址寄存器内容 + 变址寄存器内容 + 操作数
mov ax,[bx + di + 10H] ax = ds * 16 + bx + di + 10H

4）I/O端口寻址
直接端口寻址：in al,80h 端口的地址是8位形式 可以省略[]
间接端口寻址：mov dx,281H out dx,al 端口的地址是16位形式，段寄存器的[]也可以省略
必须用dx来存放I/O端口地址

8086/8088指令系统包含六大功能
1）数据传送指令
通用数据传送：实现寄存器，存储器，立即数之间的数据传送
    字节或字传送      mov dst,src
    字压入堆栈       push src
    字弹出堆栈       pop dst
    字节或字交换      xchg dst,src
    换码指令         xlat

目的地址传送
    装入有效地址      lea dst,src
    装入ds寄存器      lds dst,src
    装入es寄存器      les dst,src

标志位传送
    将F低字节装入ah寄存器 lanf
    将ah内容装入F低字节   sanf
    将F内容压入堆栈      pushf
    从堆栈弹出f内容      popf

I/O数据传送
    输入字节或字      in al(ax),port
                    in al(ax),dx
    输出字节或字      out port,al(ax)
                    out dx,al(ax)

2）算术运算指令

3）逻辑运算指令

4）串操作指令

5）程序控制指令

6）CPU控制指令

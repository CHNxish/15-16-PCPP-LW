进程管理

进程(Process)：
A program in execution
区分进程：处理什么程序，什么数据，有什么状态

从数据结构和算法来看进程

new -> ready <-> running -> terminated
         ↑ waiting ↓

PCB 进程控制块(Process Control Block)
process state + process number + program counter +
registers + memory limits + list of open files + ...

进程调度队列 Job Queue Ready Queue Device Queue
进程一经创建，即在队列之间迁移，直到终止

-> Ready Queue -------Scheduler--------->            CPU ->
    ↑                                                 ↓
    ↑ <- I/O <- I/O Queue <-          I/O Request  <- ↓
    ↑                     <-   Time Slice Expired  <- ↓
    ↑ <- Child Executes   <-         Fork A Child  <- ↓
    ↑ <- Interrupt Occurs <- Wait For On Interrupt <- ↓

进程上下文切换(Context Switch)

前趋图(Precedence Graph)用于描述进程之间执行的前后关系，是一种有向无循环图(Directed Acyclic Graph)
P1 -> P2 ->
   -> P3 -> P5 ->
   -> P4 -> P6 -> P8 ->
         -> P7       -> P9

初始结点 直接前趋 直接后继 终止结点 重量(程序量或结点执行时间)

前趋关系
P = {P1, P2, P3, P4, P5, P6, P7, P8, P9} ->= {(P1, P2), (P1, P3), (P1, P4), (P2, P5), (P3, P5), (P4, P6), (P4, P7), (P5, P8), (P6, P8), (P7, P9), (P8, P9)}
只有前面操作执行了后续操作才能执行

程序的并发执行及其特征
并发执行：一组在逻辑上相互独立的程序或程序段在执行过程中，其执行时间在客观上相互重叠，即一个程序段的执行尚未结束，另一个程序段的执行已经开始的这种执行方式

特征：1）间断性 2）失去封闭性 3）不可再现性

进程的特征和状态
特征：
1）结构特征 进程 = 程序段 + 数据段 + 进程控制块(Process Control Block) 往往提到的进程是进程的PCB
2）动态性 进程具有一定的生命期，“它由创建而产生，由调度而执行，由撤消而消亡”，而程序则指示一组有序指令的集合，并存放在某种介质中，其本身并不具有运动的含义，因而是静态的
3）并发性
4）独立性 能独立运行，独立分配资源和独立接受调度的基本单元
5）异步性

进程：进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位

状态：
1）就绪状态 进程分配了除CPU外的所有资源，只要获得CPU，便可执行。  就绪队列
2）执行状态 进程获得CPU，程序正在执行   单CPU单进程执行，多CPU多进程并行执行
3）阻塞状态 正在执行的进程由于发生某些事件而暂时无法继续执行，便放弃处理器处于暂停状态，即进程的执行发生阻塞

新状态 4）挂起状态
引起挂起状态的原因 1）终端用户的请求 2）父进程请求 3）负荷调节的需要 4）操作系统的需要
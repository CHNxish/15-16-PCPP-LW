第一代 电子管计算机
第二代 晶体管计算机
第三代 集成电路计算机

FPGA芯片 + VHDL高级语言

进入20世纪70年代后，把计算机当作高级计算机工具的狭隘观念被人们逐渐摒弃，计算机称为一门独立的学科而迅猛发展，并且影响，改变着人们的生活方式，
这是由于微处理器的出现(采用大规模和超大规模集成电路)，软件技术的完善和应用范围的不断拓宽所带来的必然结果

光计算机，生物计算机，量子计算机

计算机程序：程序员和计算机硬件之间的交互的语言
计算机程序的分类：机器语言，汇编语言，高级语言

机器语言是计算机硬件能直接识别和运行的指令的集合，是二进制码组成的指令，
用机器语言设计程序基本不可行

汇编语言是对计算机机器语言进行符号化处理的结果，再增加一些为方便程序设计而实现的扩展功能

高级语言又称算法语言，它的实现思路不是过分得“靠拢”计算机硬件的指令系统，
而是着重面向解决问题所用的算法，瞄准的是如何使程序设计人员能够方便地写出处理问题和解决问题所用的算法，
瞄准的是如何使设计人员能够方便地写出处理问题和解决问题，力争使程序设计工作的效率更高

程序的最小单元是指令，同时，指令也是计算机硬件执行程序的最小单元

High Level Language Program
           ↓ Compiler
Assembly Language Program
           ↓ Assembler
Machine Language Program
           ↓ Machine Interpretation
Control Signal Specification

冯诺伊曼结构计算机： 存储程序 -> 顺序执行指令

计算机系统根据代码执行的过程的层次结构
    | 高级语言层
软件 | 汇编语言层
系统 | 操作系统层
    | 指令系统层 |
    微体系结构层 | 硬件系统
    数字逻辑层   |

根据指令集不同而设置的不同汇编语言 x86,arm,MIPS

指令格式：指令字中操作码和地址码的二进制分配方案
指令字 指令字长
寻址方式

MIPS汇编语言 MIPS64 MIPS16e
MIPS指令格式 寄存器型 立即数型 转移型
寻址方式 寄存器寻址 立即数寻址 变址寻址

格式编码和字符集合 点阵
ASCII Unicode UTF-8
数值型数据：定点数和浮点数
数值范围和数值精度
正数的原码，反码和补码一样
负数的编码
原码：符号位｜数的绝对值
反码：符号位｜数值的按位求反
补码：反码的最低位+1
[x + y]补 = [x]补 + [y]补
[x]补连同符号在内，诸位求反，最低位+1，可得[-x]补
[x - y]补 = [x + (-y)]补 = [x]补 + [-y]补

数据的存放
大端存储：数据的低位保存在内存的高地址字节中
小端存储：数据的高位保存在内存的高地址字节中

检错纠错码：码距离
奇偶校验码 汉明校验码

运算器 完成算术和逻辑运算
实现功能：+, -, *, /, ∧, ∨, ¬
得到的运算结果状态：C(进位) Z(是否为零) O(溢出) S(正负)
得到操作数，输出或存放运算结果：寄存器组和数据总线
运算器的基本逻辑电路：
  逻辑门电路：完成逻辑运算
  加法器：完成加法运算
  触发器：保存数据
  多路选择器，移位器：选择，连通

ALU功能和设计
  功能：对操作数A，B完成算术逻辑运算，实现ADD, AND, OR
  设计：加法器，与门，或门

1位ALU加法运算实现
  输入信号：A, B, CarryIn
  输出信号：CarryOut, Sum

超前进位加法

补码乘法：布斯算法 (booth algorithm)
[x * y]补 = [x]补 * (-2^n-1yn-1 + (i=0 n-2)∑2^iyi) = [x]补 * (i=0 n-2)(yi-1 - yi) 令y-1 = 0

矩阵并行乘法器

原码除法：加减交替除法

运算器是计算机系统中执行数据运算，处理的功能部件，类似于一个工厂中的生产加工车间，由ALU和寄存器组等组成，功能：
1.完成算术，逻辑运算，产生结果并保存运算状态
2.暂存运算所用的操作数
3.暂存运算的中间结果
4.输出运算结果

时序逻辑电路包含记忆单元，输出不仅与输入有关，而且与之前的状态有关
组合逻辑电路不包含记忆单元，输出和输入有关，与之前的状态无关

运算器包括定点运算器和浮点运算器两种

AM2901运算器 = 8种功能 + 3个主要部件(ALU， 16个通用寄存器，乘商寄存器)

用VHDL设计AM2901运算器
1.逻辑设计 功能分析
2.设计描述 自顶向下设计方法 划分模块(ALU, Register Files, A和B锁存器)
3.模拟仿真
4.硬件调试

浮点数的表示和计算 ieee.754
尾数包含：符号位 + 尾数的绝对值
阶数包含：符号位 + 阶码的绝对值   [X]移 = [X]补 + OffSize

X = MsEsEm...E2E1M-1M-2...M-n = (-1)^S + (1 + Significand) * 2^Exp

IEEE标准：阶码用移码表示，尾数用原码表示
           符号位数      阶码位数      尾数位数     总位数
短浮点数       1           8            23         32
长浮点数       1           11           52         64
临时浮点数    存放计算时的临时结果                    80 

浮点数的加减乘除
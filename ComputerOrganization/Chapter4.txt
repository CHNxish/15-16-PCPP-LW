控制器

控制器的主要功能
1.正确执行指令规定的功能
2.自动，连续执行指令

指令系统
1.是硬件和软件的接口
2.CISC和RISC

指令格式
指令如何用二进制编码表示，主要是操作码和操作数地址的安排方案

寻址方式
处理器根据指令中给出的地址信息来寻找有效地址的方式
1.指令寻址
    顺序寻址方式
    跳跃寻址方式
2.操作数寻址
    立即寻址
    直接寻址
    间接寻址
    寄存器寻址和寄存器间接寻址
    相对寻址
    基址寻址
    变址寻址

指令的执行
取指令 -> 分析指令 -> 执行指令 -> (内存读写 ->) 数据写回 -> 取下一条指令

有限状态机标明执行步骤

指令周期：一条指令的执行时间
CPU周期：一个CPU时钟时间
单周期CPU，多周期CPU，指令流水线CPU

单周期CPU：
  优点：
    每条指令占用一个时钟周期
    逻辑设计简单，时钟设计也简单
  缺点：
    各组成部件的利用率不高，各部件大部分时间在等待
    时钟周期应满足执行时间最长指令的要求
    CPI = 1

硬连线控制器 微程序控制器

多周期CPU特点：
  指令的执行划分为多个步骤
  每个步骤占用一个CPU周期
  不同指令的执行周期不同
  指令串行执行
  提高了整体性能
各部分利用率依旧偏低 CPI > 1

指令流水线CPU
  注意事项：
    任务分解成多个步骤完成
    每个步骤使用不同的资源
    任务内部存在关联，完成每个任务的步骤顺序一致
    任务之间相互独立，没有依赖关系
  特性：
    流水线并没有缩短单个任务的延迟，但提高了整个系统的吞吐率
    多个任务同时运行，占用不同的资源
    可能的加速比 = 流水段数
    流水线效率受限于用时最长的阶段
  步骤划分：
    取指令周期(IF)
    指令译码/读寄存器周期(ID)
    执行/有效地址计算周期(EX)
    存储器访问/分支完成周期(MEM)
    写回周期(WB)

流水线寄存器(阶段寄存器)：
  所有用于在同一条指令的各个时钟周期之间保存临时数据的寄存器，都归入刘淑娴寄存器这一类中
  流水线寄存器保存着从一个流水段传送到下一个流水段的所有数据和控制信号

指令流水线CPU中可能存在的冲突：结构冲突，数据冲突，控制冲突
  结构冲突：指令在重叠执行的过程中，硬件资源满足不了指令重叠执行的要求，发生硬件资源冲突而产生的冲突
  数据冲突：是指在同时重叠执行的几条指令中，一条指令依赖于前面指令执行结果数据，但是又在指定位置得不到时发生的冲突
  控制冲突：是指流水线中的分支指令或致其他需要改写PC的指令造成的冲突

解决结构冲突：
  1.暂停流水线    可能会非常影响效率
  2.重复设置资源       可以设置多访问端口或者多存储器(寄存器)

解决数据冲突：   MIPS指令只存在RAW冲突
  1.暂停流水线  对于LOAD指令必须暂停
  2.数据旁路技术     在EXE段和MEM段保存rd
  判断rs和rt是否和rd相等，通过多路选择器，将正确的值送给A，B寄存器
  3.优化编译器
  4.动态调度
数据冲突的扩展：乱序发射

解决控制冲突：
  1.预测是否暂停，考虑是否暂停流水线
  预测暂停，预测不暂停，动态预测     分支目的缓冲区(branch target buffer)
  2.编译器添加延迟槽

异常：CPU运行时发生突发的不正常事件
  1.指令执行过程中发生错误
  2.外部设备提出服务请求
  3.多进程运行时与其他进程发生资源冲突
来自CPU，称为异常；来自外部设备，称为中断

异常处理的实现
  1.保存现场
  2.转异常处理程序(中断服务)
  3.处理完成后，返回主程序执行
Swing       javax.swing
AWT         java.awt

GUI API
1)组建类
2)容器类
java.awt.Container
javax.swing.JFrame
javax.swing.JPanel
javax.swing.JApplet
javax.swing.JDialog
3)辅助类
java.awt.Graphics
java.awt.Color
java.awt.Font
java.awt.FontMetrics
java.awt.Dimension
java.awt.LayouManager

Object <- border
       <- event
       <- Dimension
       <- Font
       <- FontMetrics
       <- Color
       <- Graphics
       <- Component <- LayoutManager
                    <- Container <- Panel <- Applet <- JApplet
                                 <- Window <- Frame <- JFrame
                                           <- Dialog <- JDialog
                                 <- JComponent <- JButton
                                               <- JLabel
                                               <- JTextField
                                               <- JPanel
                                               <- 更多其他类

1)JFrame类 javax.swing.JFrame 框架
+JFrame()
+JFrame(title: String)
+setSize(width: int, height: int): void
+setLocation(x: int, y: int): void         // 设置左上角的位置
+setLocationRelativeTo(c: Component): void // 设置和特定组建的相关的框架位置
+setVisible(visible: boolean): void
+setDefaultCloseOperation(mode: int): void
+pack() : void                             // 自动设置框架大小和内部组件
+add(comp: Component): void

调用setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);来告诉程序当框架关闭结束程序
如果不使用，框架关闭后不结束程序，只能通过系统中的命令结束进程

2)LayoutManager               布局管理器
FlowLayout java.awt.FlowLayout
FlowLayout.LEFT FlowLayout.CENTER FlowLayout.RIGHT 左对齐 居中 右对齐
-alignment: int // 对齐方式
-hgap: int      // 水平间隔
-vgap: int      // 垂直间隔
+FlowLayout()
+FlowLayout(alignment: int)
+FlowLayout(alignment: int, hgap: int, vgap: int)

GridLayout java.awt.GridLayout
顺序从左到右，从上到下
-rows: int
-columns: int
-hgap: int
-vgap: int
+GridLayout()
+GridLayout(rows: int, columns: int)
+GridLayout(rows: int, columns: int, hgap: int, vgap: int)

BorderLayout java.awt.BorderLayout
BorderLayout.EAST SOUTH WEST NORTH CENTER
-hgap: int
-vgap: int
+BorderLayout()
+BorderLayout(hgap: int, vgap: int)
添加组件的时候不同，frame.add(new JButton("East"), BorderLayout.EAST)

setLayout();  Container类中

布局管理器都有修改器，比如FlowLayout的setAlignment(int),setHgap(int),setVgap(int)

3)JPanel类 javax.swing.JPanel 面板
面板可以放在一个框架或者另一个面板中

4)Color类 java.awt.Color 颜色
颜色由红，绿，蓝三原色构成，也就是通常说的RGB
+Color(r: int, g: int, b: int)
Color.BLACK BLUE CYAN DARK_GRAY GRAY GREEN LIGHT_GRAY MAGENTA ORANGE PINL RED WHITE YELLOW
setBackground(); setForeground(); Component类中

5)Font类 java.awt.Font 字体
+Font(String name, int style, int size)
name: "SansSerif" "Serif" "Monospaced" "Dialog" "DialogInput"
style: Font.PLAIN Font.BOLD Font.ITALIC Font.BOLD + Font.ITALIC
setFont(); Component类中

SwingGUI组件的公共特性
1)java.awt.Component
-font: java.awt.Font
-background: java.awt.Color
-foreground: java.awt.Color
-preferredSize: java.awt.Dimension // Dimension类由width和height组成
-visible: boolean
+getWidth(): int
+getHeight(): int
+getX(): int
+getY(): int

2)java.awt.Container
+add(comp: Component): Component
+add(comp: Component, index: int): Component
+remove(comp: Component): void
+getLayout(): LayoutManager
+setLayout(l: LayoutManager): void
+paintComponents(g: Graphics): void

3)javax.swing.JComponent
-toolTipText: String
-border: javax.swing.border.Border

上面所有的private类型都有get和set方法

6)ImageIcon类 javax.swing.ImageIcon 图标
图标用来装饰组件，一般都很小，支持.gif,.jpg,.png
ImageIcon icon = new ImageIcon("image/xxx.gif");
JLabel jlbl = new JLabel(icon);

7)Graphics类 抽象类
+setColor(color: Color): void
+setFont(font: Font): void
+drawString(s: String, x: int, y: int ): void
+drawLine(x1: int, y1: int, x2: int, y2: int): void
+drawRect(x: int, y: int, w: int, h: int): void
+fillRect(x: int, y: int, w: int, h: int): void
+drawRoundRect(x: int, y: int, w: int, h: int, aw: int, ah: int): void
+fillRoundRect(x: int, y: int, w: int, h: int, aw: int, ah: int): void
+draw3DRect(x: int, y: int, w: int, h: int, raised: boolean): void
+fill3DRect(x: int, y: int, w: int, h: int, raised: boolean): void
+drawOval(x: int, y: int, w: int, h: int): void
+fillOVal(x: int, y: int, w: int, h: int): void
+drawArc(x: int, y: int, w: int, h: int, startAngle: int, arcAngle: int): void
+fillArc(x: int, y: int, w: int, h: int, startAngle: int, arcAngle: int): void
+drawPolygon(xPoints: int[], yPoints: int[], nPoints: int): void
+fillPolygon(xPoints: int[], yPoints: int[], nPoints: int): void
+drawPolygon(g: Polygon): void
+fillPolygon(g: Polygon): void
+drawPolyline(xPoints: int[], yPoints: int[], nPoints: int): void

Graphics类是一个提供与设备无关的图形界面的抽象类，当任何使用需要显示组件的时候，jvm会自动在本地平台上面为该组件创建一个Graphics对象，然后传递这个对象调用paintComponent方法来画图
protected void paintComponent(Graphics g);

java.awt.Polygon
+xpoints: int[]
+ypoints: int[]
+npoints: int
+Polygon()
+Polygon(xpoints: int[], ypoints: int[], npoints: int)
+addPoint(x: int, y: int)

FontMetrics类 抽象类 java.awt.FontMetrics
在Graphics中有它的对象
public FontMetrics getFontMetrics();          // 当前字体对象
public FontMetrics getFontMetrics(Font font); // 指定font字体对象
获取FontMetrics字体的属性
public int getAscent()
public int getDescent()
public int getLending()
public int getHeight()
public int stringWidth(String str)

java.awt.Image
ImageIcon imageIcon = new ImageIcon("image/us.gif");
Image image = imageIcon.getImage();

javax.swing.Timer
+Timer(delay: int, listener: ActionListener())
需要start和stop开始和暂停

Graphics中的方法
+drawImage(image: Image, x: int, y: int, bgcolor: Color, observer: ImageObserver): void
+drawImage(image: Image, x: int, y: int, observer: ImageObserver): void
+drawImage(image: Image, x: int, y: int, width: int, height: int, observer: ImageObserver): void
+drawImage(image: Image, x: int, y: int, width: int, height: int, bgcolor: Color, observer: ImageObserver): void

Component <- Container <- JComponent <- AbstractButton <- JButton
                                                       <- JToggleButton <- JCheckBox
                                                                        <- JRadioButton
                                     <- JLabel
                                     <- JTextComponent <- JTextArea
                                                       <- JTextField <- JPasswordField
                                     <- JComboBox
                                     <- JList
                                     <- JScrollBar
                                     <- JSlider

在javax.swing.SwingConstants接口中定义了很多常量
水平 LEADING LEFT CENTER RIGHT TRAILING
垂直 TOP CENTER BOTTOM

javax.swing.AbstractButton
-actionCommand: String        
-text: String
-icon: javax.swing.Icon
-pressedIcon: javax.swing.Icon
-rolloverIcon: javax.swing.Icon
-mnemonic: int
-horizontalAlignment: int
-horizontalTextPosition: int
-verticalAlignment: int
-verticalTextPosition: int
-borderPainted: boolean
-iconTextGap: int
-selected: boolean

javax.swing.JButton
+JButton()
+JButton(icon: javax.swing.Icon)
+JButton(text: String)
+JButton(text: String, icon: Icon)
+addActionListener(listener: ActionListener): void

setMnemonic(ch: char): void
setToolTipText(s: String): void

javax.swing.JToggleButton
javax.swing.JCheckBox
+JCheckBox()
+JCheckBox(text: String)
+JCheckBox(text: String, selected: boolean)
+JCheckBox(icon: Icon)
+JCheckBox(text: String, icon: Icon, selected: boolean)
+addActionListener(listener: ActionListener): void
+addItemListener(listener: ItemListener): void
+isSelected(): boolean

setForeground(color: Color): void
setBackground(color: Color): void

javax.swing.JRadioButton
+JRadioButton()
+JRadioButton(text: String)
+JRadioButton(text: String, selected: boolean)
+JRadioButton(icon: Icon)
+JRadioButton(text: String, icon: Icon)
+JRadioButton(text: String, icon: Icon, selected: boolean)
+addActionEvent(listener: ActionListener): void
+addItemListener(listener: ItemListener): void

javax.swing.ButtonGroup绑定单选按钮的关系，但是显示还是显示在面板上

javax.swing.JLabel
-text: String
-icon: javax.swing.Icon
-horizontalAlignment: int
-houizontalTextPosition: int
-verticalAlignment: int
-verticalTextPosition: int
-iconTextGap: int
+JLabel()
+JLabel(icon: javax.swing.Icon)
+JLabel(icon: Icon, hAlignment:int)
+JLabel(text: String)
+JLabel(text: String, icon: Icon, hAlignment: int)
+JLabel(text: String, hAlignment: int)


javax.swing.text.JTextComponent 抽象类
-text: String
-editable: boolean

javax.swing.JTextField
-columns: int
-horizontalAlignment: int
+JTextField()
+JTextField(column: int)
+JTextField(text: String)
+JTextField(text: String, columns: int)
+addActionListener(listener: ActionListener): void

setDocument PlainDocument

javax.swing.JTextArea
-columns: int
-rows: int
-tabSize: int
-lineWrap: boolean
-warpStyleWord: boolean
+JTextArea()
+JTextArea(rows: int, columns: int)
+JTextArea(text: String)
+JTextArea(text: String, rows: int, columns: int)
+append(s: String): void
+insert(s: String, pos: int): void
+replaceRange(s: String, start: int, end: int): void
+getLineCount(): int

JScrollPane 保存文本行，实现滚动


javax.swing.JComboBox
+JComboBox()
+JComboBox(items: Object[])
+addItem(item: Object): void
+getItemAt(index: int): Object
+getItemCount(): int
+getSelectedIndex(): int
+setSelectedIndex(index: int): void
+getSelectedItem(): Ojbect
+setSelectedItem(item: Object): void
+removeItem(anObject: Object): void
+removeItemAt(anIndex: int): void
+removeAllItems(): void
+addActionEvent(listener: ActionListener): void
+addItemListener(listener: ItemListener): void


javax.swing.JList
-selectedIndex: int
-selectedIndeices: int[]
-selectedValue: Object
-visibleRowCount: int
-selectionVackground: Color
-selectionForeground: Color
-selectionMode: int
+JList()
+JList(items: Object[])
+addListSelectionListener(listener: ListSelectionListener): void

selectionMode中的值在javax.swing.ListSelectionModel
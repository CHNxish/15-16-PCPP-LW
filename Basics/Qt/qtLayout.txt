布局管理

Qt的布局管理系统提供了强大的机制来自动排列窗口中的所有部件，确保它们有效的使用空间

     布局管理器常用属性说明
    属性                          说明
  layoutName             现在所使用的布局管理器的名称
  layoutLeftMargin       设置布局管理器到界面左边界的距离
  layoutTopMargin        设置布局管理器到界面上边界的距离
  layoutRightMargin      设置布局管理器到界面右边界的距离
  layoutBottomMargin     设置布局管理器到界面下边界的距离
  layoutSpacing          布局管理器中各个子部件间的距离
  layoutStretch          伸缩因子
  layoutSizeConstraint   设置大小约束条件

1.QBoxLayou头文件       基本布局管理器 QVBoxLayou QHBoxLayou
  MainWindow w;
  QWidget *widget = new Qwidget(&w);
  widget->resize(400, 300);
  QVBoxLayout *layout = new QVBoxLayout();
  QFontComboBox *fontComboBox = new QFontComboBox();
  QTextEdit *textEdit = new QTextEdit();
  layout->addWidget(fontComboBox);
  layout->insertWidget(0, textEdit);
  layout->setSpacing(5);
  layout->setContentsMargins(5, 5, 5, 5);
  widget->setLayout(layout);
  w.show();
2.QGridLayout头文件     栅格布局管理器
  layout->addWidget(pushButton, 0, 0, 1, 1);
3.QFormLayout头文件     窗口布局管理器
  layout->addRow(new QLabel("Label"), new QLineEdit());
4.QStackedLayout头文件  栈布局管理器
  layout->addWidget(new QWidget());

设置部件大小：
  sizeHint() minimumSizeHint()
  setSizeHint() setMinimumSizeHint()

除了QLayout外，还能使用QSplitter布局
QSplitter继承于QFrame

设置伙伴(buddy)
  QLabel和部件可用Alt和字符的组合键使用

设置Tab键顺序
  1.Edit Tab Order编写
  2.setTabOrder(ui->lineEdit, ui->spinBox); lineEdit在spinBox前面
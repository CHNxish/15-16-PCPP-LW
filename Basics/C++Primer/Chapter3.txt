标准库类型

string类型支持长度可变的字符串
class string
+string()                    // s == ""
+string(str: string)
+string(str: char*)
+string(n: int, c: char)
+assign(str: string)
+assign(str: string, index: int, len: int)
+append(str: string)
+append(str: string, index: int, len: int)
+insert(index: int, str: string)
+replace(index: int, len: int, str: string)
+empty(): bool
+size(): size_type
+getline(in: istream, str: string) // 获取一整行，ostream显示的字符不会读取
+at(n: size_type): char
+compare(str: string): int
+swap(str: string): void
+find(c: char, pos: int): int
+find(c: const char*, pos: int): int
+c_str(): char*


operator for string
[n: string::size_type]: char
+: string
=: string
+=: string
== != < <= > >=: bool
<< >>

iterator for string
iterator const_iterator reverse_iterator const_reverse_iterator
begin() end() rbegin() rend()

sstream 头文件
istringstream ostringstream

cctype 头文件

vector类型
class vector
+vector<T>()
+vector<T>(v: vector<T>)
+vector<T>(n: int, i: T)
+empty(): bool
+size(): int
+push_back(i: T)
+clear()

operator for vector
[n: vector<T>::size_type]:: T
=: vector<T>
==: bool
!= < <= > >=: bool

iterator for vector
iterator const_iterator
begin() end()

bitset类型
+bitset<n: int>()
+bitset<n: int>(u: unsigned long)
+bitset<n: int>(s: string)
+bitset<n: int>(s: string, index: int, len: int)
+any(): bool     // 是否有1
+none(): bool    // 是否没有1
+count(): int    // 1的个数
+size(): size_t
+test(n: int): bool // 是否是1
+set()           // 所有设置为1
+set(n: int)     // n位设置为1
+reset()         // 所有设置为0
+reset(n: int)   // n位设置为0
+to_ulong(): UL  // 返回unsigned long值

operator for bitset
[n: int]: bool
<<

迭代器 标准库容器都支持iterator类型
begin()和end()获取迭代器类型变量iter，*iter使用,iter++迭代，==或!=比较
iter + n, iter - n, iter1 - iter2
vector<int>::iterator iter = iver.begin() + iver.size() / 2

char* to int
atoi()

int to char*
sprintf()

string to int
stoi()

int to string
to_string()
